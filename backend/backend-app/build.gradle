plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

dependencies {
    // Frontend
//    implementation project(':frontend')

    //Spring
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    implementation "io.springfox:springfox-boot-starter:${springfoxVersion}"
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    //Database
    implementation "org.hibernate:hibernate-core"
    implementation "org.hibernate:hibernate-entitymanager"
    implementation "org.hibernate.validator:hibernate-validator"
    implementation 'org.liquibase:liquibase-core'
    runtimeOnly 'com.h2database:h2'

    //Other
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    implementation "org.apache.commons:commons-lang3"
    implementation "commons-collections:commons-collections:${commonsCollectionsVersion}"
    implementation "commons-io:commons-io:${commonsIoVersion}"
    annotationProcessor 'org.projectlombok:lombok'
    compileOnly 'org.projectlombok:lombok'
    implementation "javax.validation:validation-api"

    //Test
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "org.junit.jupiter:junit-jupiter-params"
    testRuntime "org.junit.jupiter:junit-jupiter-engine"
    testRuntime "org.junit.vintage:junit-vintage-engine"
    testImplementation "org.powermock:powermock-api-mockito2:${powermockitoVersion}"
    testImplementation "org.powermock:powermock-module-junit4:${powermockitoVersion}"
}

test {
    useJUnitPlatform()
    afterTest { descriptor, result ->
        println "\n$descriptor.className [$descriptor.classDisplayName] > $descriptor.name [$descriptor.displayName]: $result.resultType"
    }
}

springBoot {
    buildInfo()
}